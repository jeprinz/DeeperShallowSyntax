nil = Nil
cons = \gamma name ty. (gamma, (name, ty))

zero = \x. snd x
succ = \x gamma. x (fst gamma)

pi = \x y. \gamma. Pi (x gamma) (\a. y (gamma, a))
arrow = \x y. pi x (weaken y)
type = \gamma. Type

var = \x. x
lambda = \t. \gamma a. t (gamma, a)
app = \t1 t2. \gamma. (t1 gamma) (t2 gamma)

weaken = \t. \gamma. t (fst gamma)
{
    {TheValWas ?t1},
    Term ?Gamma (pi ?A ?B) ?t1,
    Term ?Gamma ?A ?t2
    ---------------------------------------------------------- "App2 _ _"
    Term ?Gamma (\gamma. ?B (gamma, ?t2 gamma)) ?any
}

{
    Regex ?name "[a-zA-Z]+"
    ------------------------- "_"
    Name ?name
}
{
    ---------------- ""
    IsId (\x . x)
}
{
    ----------------------------------------------------- ""
    Var (cons ?Gamma ?name ?T) (weaken ?T) zero ?name
}
{
    Var ?Gamma ?T ?i ?name,
    ?name != ?othername
    -------------------------------------------------------------------- "_"
    Var (cons ?Gamma ?othername ?othertype) (weaken ?T) (succ ?i) ?name
}
{
    Name ?name,
    Term ?Gamma type ?A,
    Term (cons ?Gamma ?name ?A) ?B ?body
    ------------------------------------------ "fun _ : _ => _"
    Term ?Gamma (pi ?A ?B) (lambda ?body)
}
{
    Name ?name,
    Term (cons ?Gamma ?name ?A) ?B ?body
    ------------------------------------------ "fun _ => _"
    Term ?Gamma (pi ?A ?B) (lambda ?body)
}
{
    Term ?Gamma (pi ?A ?B) ?t1,
    Term ?Gamma ?A ?t2
    ---------------------------------------------------------- "_ _"
    Term ?Gamma (\gamma. ?B (gamma, ?t2 gamma)) (app ?t1 ?t2)
}
{
    -------------------------- "Type"
    Term ?Gamma type type
}
{
    Name ?name,
    Term ?G type ?A,
    Term (cons ?G ?name ?A) type ?B,
    ------------------------------------ "(_ : _) -> _"
    Term ?G type (pi ?A ?B)
}
{
    Term ?G type ?A,
    Term ?G type ?B,
    ------------------------------------ "_ -> _"
    Term ?G type (arrow ?A ?B)
}
{
    Term ?G ?T ?t
    --------------- "(_)"
    Term ?G ?T ?t
}
{
    {HoleOf CONTEXT ?ctx TYPE ?ty TERM ?t},
    Term ?ctx ?ty ?t
    ------------------------- "Probe _"
    Term ?ctx ?tOut ?tOut
}
/*
 */
{
    Name ?name1,
    {Var ?ctx ?ty ?t ?name1},
    -------------------------------- "_"
    Term ?ctx ?ty (var ?t)
}
{
    {HoleOf CONTEXT ?ctx TYPE ?ty TERM ?t}
    ------------------------- "?"
    Term ?ctx ?ty ?t
}